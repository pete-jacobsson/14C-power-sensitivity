}
plot_predictions(single_cals_w_curve, test1, hpd_area = 68, offset = c(0,50))
plot_predictions(single_cals_w_curve_uncert, test1,
hpd_area = 68, offset = c(0,50))
plot_predictions <- function(sim_results, pred_table, hpd_area,
offset, sigma, curve_uncert) {
sim_results <- sim_results %>%
filter(between(offset_magnitude, offset[1], offset[2]))
sim_results
}
plot_predictions(single_cals_w_curve_uncert, test1,
hpd_area = 68, offset = c(0,50))
filter_simus <- function(sim_results, hpd_area, offset, sigma, curve_uncert) {
sim_results <- sim_results %>%
filter(
between(offset_magnitude, offset[1], offset[2]) &
between(measurement_error, sigma[1], sigma[2]) &
between(curve_uncert, curve_uncert[1], curve_uncert[2]))
sim_results
}
summarize_sims <- function(sim_results, hpd_area, offset, sigma, curve_uncert) {
sim_results <- sim_results %>%
filter(
between(offset_magnitude, offset[1], offset[2]) &
between(measurement_error, sigma[1], sigma[2]) &
between(curve_uncert, curve_uncert[1], curve_uncert[2]))
sim_results
}
filter_sims(single_cals_w_curve_uncert, hpd_area = 68, offset = c(0,50))
summarize_sims(single_cals_w_curve_uncert, hpd_area = 68, offset = c(0,50))
summarize_sims(single_cals_w_curve_uncert, hpd_area = 68, offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20))
summarize_sims <- function(sim_results, hpd_area, offset, sigma, curve_uncert,
grouping_param) {
sim_results <- sim_results %>%
filter(
between(offset_magnitude, offset[1], offset[2]) &
between(measurement_error, sigma[1], sigma[2]) &
between(curve_uncert, curve_uncert[1], curve_uncert[2])) %>%
select(starts_with(grouping_param), ends_with(hpd_area))
sim_results
}
summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "offset_magnitude")
summarize_sims <- function(sim_results, hpd_area, offset, sigma, curve_uncert,
grouping_param) {
sim_results <- sim_results %>%
filter(
between(offset_magnitude, offset[1], offset[2]) &
between(measurement_error, sigma[1], sigma[2]) &
between(curve_uncert, curve_uncert[1], curve_uncert[2])) %>%
select(starts_with(grouping_param), ends_with(hpd_area)) %>%
rename(1 = variable)
summarize_sims <- function(sim_results, hpd_area, offset, sigma, curve_uncert,
grouping_param) {
sim_results <- sim_results %>%
filter(
between(offset_magnitude, offset[1], offset[2]) &
between(measurement_error, sigma[1], sigma[2]) &
between(curve_uncert, curve_uncert[1], curve_uncert[2])) %>%
select(starts_with(grouping_param), ends_with(hpd_area)) %>%
rename("variable" = 1)
sim_results
}
summarize_sims <- function(sim_results, hpd_area, offset, sigma, curve_uncert,
grouping_param) {
sim_results <- sim_results %>%
filter(
between(offset_magnitude, offset[1], offset[2]) &
between(measurement_error, sigma[1], sigma[2]) &
between(curve_uncert, curve_uncert[1], curve_uncert[2])) %>%
select(starts_with(grouping_param), ends_with(hpd_area)) %>%
rename("grouping_variable" = 1)
sim_results
}
summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "offset_magnitude")
summarize_sims <- function(sim_results, hpd_area, offset, sigma, curve_uncert,
grouping_param) {
sim_results <- sim_results %>%
filter(
between(offset_magnitude, offset[1], offset[2]) &
between(measurement_error, sigma[1], sigma[2]) &
between(curve_uncert, curve_uncert[1], curve_uncert[2])) %>%
select(starts_with(grouping_param), ends_with(hpd_area)) %>%
select(1, 2) %>%
group_by(1) %>%
summarize(
ratio_accurate = mean(2)
)
sim_results
}
summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "offset_magnitude")
summarize_sims <- function(sim_results, hpd_area, offset, sigma, curve_uncert,
grouping_param) {
sim_results <- sim_results %>%
filter(
between(offset_magnitude, offset[1], offset[2]) &
between(measurement_error, sigma[1], sigma[2]) &
between(curve_uncert, curve_uncert[1], curve_uncert[2])) %>%
select(starts_with(grouping_param), ends_with(hpd_area)) %>%
select(1, 2) %>%
group_by(vars(grouping_param)) %>%
summarize(
ratio_accurate = mean(2)
)
sim_results
}
summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "offset_magnitude")
summarize_sims <- function(sim_results, hpd_area, offset, sigma, curve_uncert,
grouping_param) {
sim_results <- sim_results %>%
filter(
between(offset_magnitude, offset[1], offset[2]) &
between(measurement_error, sigma[1], sigma[2]) &
between(curve_uncert, curve_uncert[1], curve_uncert[2])) %>%
select(starts_with(grouping_param), ends_with(hpd_area)) %>%
rename("var_plotted" = 1, "ratio_accurate" = 2)
group_by(vars(grouping_param)) %>%
summarize(
ratio_accurate = mean(2)
)
sim_results
}
summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "offset_magnitude")
summarize_sims <- function(sim_results, hpd_area, offset, sigma, curve_uncert,
grouping_param) {
sim_results <- sim_results %>%
filter(
between(offset_magnitude, offset[1], offset[2]) &
between(measurement_error, sigma[1], sigma[2]) &
between(curve_uncert, curve_uncert[1], curve_uncert[2])) %>%
select(starts_with(grouping_param), ends_with(hpd_area)) %>%
rename("var_to_plot" = 1, "result_accurate" = 2) %>%
mutate(var_to_plot = plyr::round_any(var_to_plot, 2))
group_by(var_to_plot) %>%
summarize(
ratio_accurate = mean(result_accurate)
)
sim_results
}
summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "offset_magnitude")
summarize_sims <- function(sim_results, hpd_area, offset, sigma, curve_uncert,
grouping_param) {
sim_results <- sim_results %>%
filter(
between(offset_magnitude, offset[1], offset[2]) &
between(measurement_error, sigma[1], sigma[2]) &
between(curve_uncert, curve_uncert[1], curve_uncert[2])) %>%
select(starts_with(grouping_param), ends_with(hpd_area)) %>%
rename("var_to_plot" = 1, "result_accurate" = 2) ~%>%
summarize_sims <- function(sim_results, hpd_area, offset, sigma, curve_uncert,
grouping_param) {
sim_results <- sim_results %>%
filter(
between(offset_magnitude, offset[1], offset[2]) &
between(measurement_error, sigma[1], sigma[2]) &
between(curve_uncert, curve_uncert[1], curve_uncert[2])) %>%
select(starts_with(grouping_param), ends_with(hpd_area)) %>%
rename("var_to_plot" = 1, "result_accurate" = 2) #%>%
# mutate(var_to_plot = plyr::round_any(var_to_plot, 2))
# group_by(var_to_plot) %>%
# summarize(
#   ratio_accurate = mean(result_accurate)
# )
sim_results
}
summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "offset_magnitude")
summarize_sims <- function(sim_results, hpd_area, offset, sigma, curve_uncert,
grouping_param) {
sim_results <- sim_results %>%
filter(
between(offset_magnitude, offset[1], offset[2]) &
between(measurement_error, sigma[1], sigma[2]) &
between(curve_uncert, curve_uncert[1], curve_uncert[2])) %>%
select(starts_with(grouping_param), ends_with(hpd_area)) %>%
rename("var_to_plot" = 1, "result_accurate" = 2) %>%
mutate(var_to_plot = plyr::round_any(var_to_plot, 2)) %>%
group_by(var_to_plot) %>%
summarize(
ratio_accurate = mean(result_accurate)
)
sim_results
}
summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "offset_magnitude")
test2 <- summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "offset_magnitude")
summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "measurement_error")
plot_logistic <- function(pred_df, sims_df, xlab, ylab, acc_target) {
plot <- ggplot(data = pred_df) +
geom_hline(yintercept = acc_target) +
geom_bar(aes(x = "var_to_plot", y = "ratio_accurate"))
plot
}
plot_logistic(pred_df = test1, sims_df = test2, acc_target = 0.68)
plot_logistic <- function(pred_df, sims_df, xlab, ylab, acc_target) {
plot <- ggplot(data = pred_df) +
geom_hline(yintercept = acc_target) +
geom_bar(aes(x = var_to_plot, y = ratio_accurate))
plot
}
plot_logistic(pred_df = test1, sims_df = test2, acc_target = 0.68)
plot_logistic <- function(pred_df, sims_df, xlab, ylab, acc_target) {
plot <- ggplot(data = pred_df) +
geom_hline(yintercept = acc_target) +
geom_bar(aes(x = var_to_plot, y = ratio_accurate), stat = 'identity')
plot
}
plot_logistic(pred_df = test1, sims_df = test2, acc_target = 0.68)
plot_logistic <- function(pred_df, sims_df, xlab, ylab, acc_target) {
plot <- ggplot(data = sims_df) +
geom_hline(yintercept = acc_target) +
geom_bar(aes(x = var_to_plot, y = ratio_accurate), stat = 'identity')
plot
}
plot_logistic(pred_df = test1, sims_df = test2, acc_target = 0.68)
test2 <- summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "offset_magnitude", rounding = 4)
summarize_sims <- function(sim_results, hpd_area, offset, sigma, curve_uncert,
grouping_param, rounding) {
sim_results <- sim_results %>%
filter(
between(offset_magnitude, offset[1], offset[2]) &
between(measurement_error, sigma[1], sigma[2]) &
between(curve_uncert, curve_uncert[1], curve_uncert[2])) %>%
select(starts_with(grouping_param), ends_with(hpd_area)) %>%
rename("var_to_plot" = 1, "result_accurate" = 2) %>%
mutate(var_to_plot = plyr::round_any(var_to_plot, rounding)) %>%
group_by(var_to_plot) %>%
summarize(
ratio_accurate = mean(result_accurate)
)
sim_results
}
test2 <- summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "offset_magnitude", rounding = 4)
summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "measurement_error")
test2 <- summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "offset_magnitude", rounding = 4)
summarize_sims(single_cals_w_curve_uncert, hpd_area = "68", offset = c(0,50),
sigma = c(8, 32), curve_uncert = c(10, 20),
grouping_param = "measurement_error", rounding = 2)
plot_logistic(pred_df = test1, sims_df = test2, acc_target = 0.68)
library(tidyverse)
library(broom)
### Load the data
single_cals <- read_csv("simulation_results/singles_011_results.csv")
### Now load up the model data again, nest it and build the model functions
single_cals_curve_uncert_mod <- read_csv("single_cals_curve_uncert_mod.csv")
test <- list(
offset_magnitude = c(0, 50, TRUE),
measurement_error = c(8, 32, FALSE),
curve_uncert = c(10, 30, FALSE)
)
test[[1]]
for (item in test) {
item
}
for (item in test) {
print(item)
}
for (item in test) {
if (item[3] == 1) {
print("potato")
} else {
print("fish")
}
}
for (item in test) {
if (item[3] == 1) {
offset_magnitude = seq(item[1], item[2], length.out = 100)
} else {
print("fish")
}
}
test[[1]]
test <- list(
offset_magnitude = list(0, 50, TRUE),
measurement_error = list(8, 32, 0),
curve_uncert = list(10, 30, 0)
)
test[[1]]
for (item in test) {
print(item)
}
test <- list(
offset_magnitude = list(0, 50, TRUE),
measurement_error = list(8, 32, 0),
curve_uncert = list(10, 30, 0)
)
for (item in test) {
print(item)
}
test <- list(
offset_magnitude = list("offset_magnitude", TRUE, 0, 50),
measurement_error = list("measurement_error", FALSE, 8, 32),
curve_uncert = list("curve_uncert", FALSE, 10, 30)
)
test[[1]]
for (item in test) {
print(item)
}
for (item in test) {
print(item[2])
}
for (item in test) {
if(item[2]) {
"potato"
} else {
"fish"
}
}
for (item in test) {
if(item[[2]]) {
"potato"
} else {
"fish"
}
}
for (item in test) {
if(item[[2]]) {
print("potato")
} else {
print("fish")
}
}
assign(test[[1]][[1]], "potato")
for (item in test) {
if(item[[2]]) {
assign(item[[1]], seq(item[[3]], item[[4]], length.out = 100))
} else {
print("fish")
}
}
for (item in test) {
for (item in test) {
if(item[[2]]) {
assign(item[[1]], seq(item[[3]], item[[4]], length.out = 100))
} else {
assign(item[[1]], mean(item[[3]], item[[4]]))
}
}
test <- list(
offset_magnitude = list("offset_magnitude", TRUE, 0, 50),
measurement_error = list("measurement_error", FALSE, 8, 32),
curve_uncert = list("curve_uncert", FALSE, 10, 30)
)
for (item in test) {
if(item[[2]]) {
assign(item[[1]], seq(item[[3]], item[[4]], length.out = 100))
} else {
assign(item[[1]], mean(item[[3]], item[[4]]))
}
}
for (item in test) {
if(item[[2]]) {
assign(item[[1]], seq(item[[3]], item[[4]], length.out = 100))
} else {
assign(item[[1]], mean(c(item[[3]], item[[4]])))
}
}
for (item in test) {
if(item[[2]]) {
assign(item[[1]], seq(item[[3]], item[[4]], length.out = 100)) %>% print()
} else {
assign(item[[1]], mean(c(item[[3]], item[[4]])))
}
}
test[[1]][[1]] %>% assign("potato")
test[[1]][[1]] %>% assign("potato")
for (item in test) {
if(item[[2]]) {
assign(item[[1]], seq(item[[3]], item[[4]], length.out = 100)) %>% print()
} else {
assign(item[[1]], mean(c(item[[3]], item[[4]])))
}
}
for (item in test) {
if(item[[2]]) {
assign(item[[1]], seq(item[[3]], item[[4]], length.out = 100))
} else {
assign(item[[1]], mean(c(item[[3]], item[[4]]))) %>%
rep(100)
}
}
vars("offset_magnitude")
vars(offset_magnitude)
get(offset_magnitude)
get("offset_magnitude")
for (item in test) {
if(item[[2]]) {
assign(item[[1]], seq(item[[3]], item[[4]], length.out = 100))
} else {
assign(item[[1]],
rep(
mean(c(item[[3]], item[[4]])),
100))
}
}
data.frame(get("offset_magnitude"))
data.frame(test[[1]][[1]] = get(test[[1]][[1]]))
data.frame("potato" = get(test[[1]][[1]]))
test[[1]][[1]]
data.frame(test[[1]][[1]] = get(test[[1]][[1]]))
library(tidyverse)
library(broom)
library(tidyverse)
library(broom)
test <- list(
offset_magnitude = list("offset_magnitude", TRUE, 0, 50),
measurement_error = list("measurement_error", FALSE, 8, 32),
curve_uncert = list("curve_uncert", FALSE, 10, 30)
)
for (item in test) {
if(item[[2]]) {
assign(item[[1]], seq(item[[3]], item[[4]], length.out = 100))
} else {
assign(item[[1]],
rep(
mean(c(item[[3]], item[[4]])),
100))
}
}
get("offset_magnitude")
install.packages("jtools")
##Get the results out
offset_curve_sigma_os_params <- readRDS("single_cals_curve_uncert_regr.rds") %>%
filter(str_detect(model, "offset_sigma_curve_interact_os_acc")) %>%
mutate(model_results = map(model_results, tidy)) %>%
unnest(cols = c(model_results))
library(jtools)
offset_curve_sigma_os <- readRDS("single_cals_curve_uncert_regr.rds") %>%
filter(str_detect(model, "offset_sigma_curve_interact_os_acc"))
View(offset_curve_sigma_os)
summary(offset_curve_sigma_os$model_results[1])
summary(offset_curve_sigma_os$model_results[[1]])
make_predictions(offset_curve_sigma_os$model_results[[1]],
pred = "offset_magnitude")
library(tidyverse)
library(broom)
library(jtools)
View(offset_curve_sigma_os)
pred_offset_pos_acc68 <- make_predictions(offset_curve_sigma_os$model_results[[1]],
pred = "offset_magnitude",
pred.values = seq(0, 50))
View(pred_offset_pos_acc68)
pred_offset_pos_acc68 <- make_predictions(offset_curve_sigma_os$model_results[[3]],
pred = "offset_magnitude",
pred.values = seq(0, 50))
single_cals_curve_uncert_regr <- readRDS("single_cals_curve_uncert_regr.rds")
### Now load up the model data again, nest it and build the model functions
single_cals_curve_uncert_mod <- read_csv("single_cals_curve_uncert_mod.csv")
pred_offset_pos_acc68 <- make_predictions(offset_curve_sigma_os$model_results[[3]],
pred = "offset_magnitude",
pred.values = seq(0, 50)) %>%
rename("ratio_accurate_68" = 1)
single_cals_curve_uncert_mod %>%
filter(offset_magnitude > 0) %>%
mutate(
offset_magnitude = plyr:round_any(offset_magnitude, 2)
) %>%
group_by(offset_magnitude) %>%
summarize(
ratio_accurate_68 = mean(accuracy_68)
) %>%
ggplot(aes(x = offset_magnitude, y = ratio_accurate_68)) +
geom_bar(stat = 'identity')
single_cals_curve_uncert_mod %>%
filter(offset_magnitude > 0) %>%
mutate(
offset_magnitude = plyr::round_any(offset_magnitude, 2)
) %>%
group_by(offset_magnitude) %>%
summarize(
ratio_accurate_68 = mean(accuracy_68)
) %>%
ggplot(aes(x = offset_magnitude, y = ratio_accurate_68)) +
geom_bar(stat = 'identity')
single_cals_curve_uncert_mod %>%
filter(offset_magnitude > 0) %>%
mutate(
offset_magnitude = plyr::round_any(offset_magnitude, 2)
) %>%
group_by(offset_magnitude) %>%
summarize(
ratio_accurate_68 = mean(accuracy_68)
) %>%
ggplot(aes(x = offset_magnitude, y = ratio_accurate_68)) +
geom_bar(stat = 'identity') +
geom_line(data = pred_offset_pos_acc68)

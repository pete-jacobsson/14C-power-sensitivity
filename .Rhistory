mutate(is_pos = if_else(offset_magnitude >= 0, TRUE, FALSE)) %>%
select(curve_uncert, measurement_error, offset_magnitude, accuracy_68,
accuracy_95, is_pos, sigma_curve_uncert) %>%
group_by(is_pos) %>%
nest()
View(single_cals_curve_uncert_nest)
### Now lets run the models...
single_cals_curve_uncert_regr <- single_cals_curve_uncert_nest %>%
mutate(
offset_curve_acc68 = map(data, offset_curve_acc68),
offset_curve_acc95 = map(data, offset_curve_acc95),
offset_curve_interact_acc68 = map(data, offset_curve_interact_acc68),
offset_curve_interact_acc95 = map(data, offset_curve_interact_acc95),
offset_sigma_curve_acc68 = map(data, offset_sigma_curve_acc68),
offset_sigma_curve_acc95 = map(data, offset_sigma_curve_acc95),
offset_sigma_curve_interact_oc_acc68 =
map(data, offset_sigma_curve_interact_oc_acc68),
offset_sigma_curve_interact_oc_acc95 =
map(data, offset_sigma_curve_interact_oc_acc95),
offset_sigma_curve_interact_oc_sc_acc68 =
map(data, offset_sigma_curve_interact_oc_sc_acc68),
offset_sigma_curve_interact_oc_sc_acc95 =
map(data, offset_sigma_curve_interact_oc_sc_acc95),
offset_sigma_curve_interact_oc_sc_ocs_acc68 =
map(data, offset_sigma_curve_interact_oc_sc_ocs_acc68),
offset_sigma_curve_interact_oc_sc_ocs_acc95 =
map(data, offset_sigma_curve_interact_oc_sc_ocs_acc95),
offset_sigma_curve_interact_os_acc68 =
map(data, offset_sigma_curve_interact_os_acc68),
offset_sigma_curve_interact_os_acc95 =
map(data, offset_sigma_curve_interact_os_acc95),
offset_sigma_curve_interact_os_cs_acc68 =
map(data, offset_sigma_curve_interact_os_cs_acc68),
offset_sigma_curve_interact_os_cs_acc95 =
map(data, offset_sigma_curve_interact_os_cs_acc95),
offset_sigma_curve_comb_acc68 =
map(data, offset_sigma_curve_comb_acc68),
offset_sigma_curve_comb_acc95 =
map(data, offset_sigma_curve_comb_acc95),
offset_sigma_curve_comb_interact_acc68 =
map(data, offset_sigma_curve_comb_interact_acc68),
offset_sigma_curve_comb_acc95 =
map(data, offset_sigma_curve_comb_interact_acc95)
)
## Write model functions for 68% HPDs
offset_curve_acc68 <- function(singles_data) {
glm(accuracy_68 ~ offset_magnitude + curve_uncert, data = singles_data,
family = binomial)
}
sigma_curve_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error + curve_uncert, data = singles_data,
family = binomial(link = 'logit'))
}
offset_sigma_curve_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error + offset_magnitude + curve_uncert,
data = singles_data, family = binomial(link = 'logit'))
}
offset_curve_interact_acc68 <- function(singles_data) {
glm(accuracy_68 ~ offset_magnitude + curve_uncert +
offset_magnitude * curve_uncert,
data = singles_data,
family = binomial)
}
sigma_curve_interact_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error + curve_uncert +
measurement_error * curve_uncert,
data = singles_data,
family = binomial(link = 'logit'))
}
offset_sigma_curve_interact_sc_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error + offset_magnitude + curve_uncert +
measurement_error * curve_uncert,
data = singles_data, family = binomial(link = 'logit'))
}
offset_sigma_curve_interact_oc_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error + offset_magnitude + curve_uncert +
offset_magnitude * curve_uncert,
data = singles_data, family = binomial(link = 'logit'))
}
offset_sigma_curve_interact_oc_sc_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error + offset_magnitude + curve_uncert +
offset_magnitude * curve_uncert + measurement_error * curve_uncert,
data = singles_data, family = binomial(link = 'logit'))
}
offset_sigma_curve_interact_oc_sc_ocs_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error + offset_magnitude + curve_uncert +
offset_magnitude * curve_uncert + measurement_error * curve_uncert +
offset_magnitude * measurement_error * curve_uncert,
data = singles_data, family = binomial(link = 'logit'))
}
offset_sigma_curve_interact_os_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error + offset_magnitude + curve_uncert +
offset_magnitude * measurement_error,
data = singles_data, family = binomial(link = 'logit'))
}
offset_sigma_curve_interact_os_cs_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error + offset_magnitude + curve_uncert +
offset_magnitude * measurement_error + curve_uncert * measurement_error,
data = singles_data, family = binomial(link = 'logit'))
}
offset_sigma_curve_comb_acc68 <- function(singles_data) {
glm(accuracy_68 ~ offset_magnitude + sigma_curve_uncert,
data = singles_data, family = binomial(link = 'logit'))
}
offset_sigma_curve_comb_interact_acc68 <- function(singles_data) {
glm(accuracy_68 ~ offset_magnitude + sigma_curve_uncert +
offset_magnitude * sigma_curve_uncert,
data = singles_data, family = binomial(link = 'logit'))
}
## And now have those set up for the 95% HPD ranges -- yes I could have pivoted longer. I know!
offset_curve_acc95 <- function(singles_data) {
glm(accuracy_95 ~ offset_magnitude + curve_uncert, data = singles_data,
family = binomial)
}
sigma_curve_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error + curve_uncert, data = singles_data,
family = binomial(link = 'logit'))
}
offset_sigma_curve_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error + offset_magnitude + curve_uncert,
data = singles_data, family = binomial(link = 'logit'))
}
offset_curve_interact_acc95 <- function(singles_data) {
glm(accuracy_95 ~ offset_magnitude + curve_uncert +
offset_magnitude * curve_uncert,
data = singles_data,
family = binomial)
}
sigma_curve_interact_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error + curve_uncert +
measurement_error * curve_uncert,
data = singles_data,
family = binomial(link = 'logit'))
}
offset_sigma_curve_interact_sc_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error + offset_magnitude + curve_uncert +
measurement_error * curve_uncert,
data = singles_data, family = binomial(link = 'logit'))
}
offset_sigma_curve_interact_oc_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error + offset_magnitude + curve_uncert +
offset_magnitude * curve_uncert,
data = singles_data, family = binomial(link = 'logit'))
}
offset_sigma_curve_interact_oc_sc_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error + offset_magnitude + curve_uncert +
offset_magnitude * curve_uncert + measurement_error * curve_uncert,
data = singles_data, family = binomial(link = 'logit'))
}
offset_sigma_curve_interact_oc_sc_ocs_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error + offset_magnitude + curve_uncert +
offset_magnitude * curve_uncert + measurement_error * curve_uncert +
offset_magnitude * measurement_error * curve_uncert,
data = singles_data, family = binomial(link = 'logit'))
}
offset_sigma_curve_interact_os_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error + offset_magnitude + curve_uncert +
offset_magnitude * measurement_error,
data = singles_data, family = binomial(link = 'logit'))
}
offset_sigma_curve_interact_os_cs_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error + offset_magnitude + curve_uncert +
offset_magnitude * measurement_error + curve_uncert * measurement_error,
data = singles_data, family = binomial(link = 'logit'))
}
offset_sigma_curve_comb_acc95 <- function(singles_data) {
glm(accuracy_95 ~ offset_magnitude + sigma_curve_uncert,
data = singles_data, family = binomial(link = 'logit'))
}
offset_sigma_curve_comb_interact_acc95 <- function(singles_data) {
glm(accuracy_95 ~ offset_magnitude + sigma_curve_uncert +
offset_magnitude * sigma_curve_uncert,
data = singles_data, family = binomial(link = 'logit'))
}
### Now lets run the models...
single_cals_curve_uncert_regr <- single_cals_curve_uncert_nest %>%
mutate(
offset_curve_acc68 = map(data, offset_curve_acc68),
offset_curve_acc95 = map(data, offset_curve_acc95),
offset_curve_interact_acc68 = map(data, offset_curve_interact_acc68),
offset_curve_interact_acc95 = map(data, offset_curve_interact_acc95),
offset_sigma_curve_acc68 = map(data, offset_sigma_curve_acc68),
offset_sigma_curve_acc95 = map(data, offset_sigma_curve_acc95),
offset_sigma_curve_interact_oc_acc68 =
map(data, offset_sigma_curve_interact_oc_acc68),
offset_sigma_curve_interact_oc_acc95 =
map(data, offset_sigma_curve_interact_oc_acc95),
offset_sigma_curve_interact_oc_sc_acc68 =
map(data, offset_sigma_curve_interact_oc_sc_acc68),
offset_sigma_curve_interact_oc_sc_acc95 =
map(data, offset_sigma_curve_interact_oc_sc_acc95),
offset_sigma_curve_interact_oc_sc_ocs_acc68 =
map(data, offset_sigma_curve_interact_oc_sc_ocs_acc68),
offset_sigma_curve_interact_oc_sc_ocs_acc95 =
map(data, offset_sigma_curve_interact_oc_sc_ocs_acc95),
offset_sigma_curve_interact_os_acc68 =
map(data, offset_sigma_curve_interact_os_acc68),
offset_sigma_curve_interact_os_acc95 =
map(data, offset_sigma_curve_interact_os_acc95),
offset_sigma_curve_interact_os_cs_acc68 =
map(data, offset_sigma_curve_interact_os_cs_acc68),
offset_sigma_curve_interact_os_cs_acc95 =
map(data, offset_sigma_curve_interact_os_cs_acc95),
offset_sigma_curve_comb_acc68 =
map(data, offset_sigma_curve_comb_acc68),
offset_sigma_curve_comb_acc95 =
map(data, offset_sigma_curve_comb_acc95),
offset_sigma_curve_comb_interact_acc68 =
map(data, offset_sigma_curve_comb_interact_acc68),
offset_sigma_curve_comb_acc95 =
map(data, offset_sigma_curve_comb_interact_acc95)
)
### Lets re-orgnize the table to make parameter extraction easier.
single_cals_curve_uncert_regr <- single_cals_curve_uncert_regr %>%
select(-data) %>%
pivot_longer(!is_pos, names_to = "model", values_to = "model_results")
saveRDS(single_cals_curve_uncert_regr, "single_cals_curve_uncert_regr.rds")
single_cals_curve_uncert_regr <- readRDS("single_cals_curve_uncert_regr.rds")
### Extract the diagnostics
single_cals_curve_uncert_diag <- single_cals_curve_uncert_regr %>%
mutate(model_diags = map(model_results, glance)) %>%
select(-model_results) %>%
unnest(cols = c(model_diags))
### Now the visualization
single_cals_curve_uncert_diag %>%
mutate(
offset_direction = if_else(is_pos, "Positive", "Negative"),
hpd_area = if_else(str_detect(model, "68"), "68.2% HPD Area", "95.4% HPD Area"),
model = str_remove_all(model, "_acc\\d{2}")
) %>%
ggplot(aes(x = model, y = AIC)) +
geom_bar(stat = "identity", fill = "steelblue", color = "grey40") +
facet_grid(rows = vars(hpd_area), cols = vars(offset_direction), scales = "free") +
labs(
x = "Model",
subtitle = "AIC of different models that include curve uncertainty"
) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
#legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
)
View(single_cals_curve_uncert_diag)
### The first two items are a later addition if further models need added
### Now load up the model data again, nest it and build the model functions
single_cals_curve_uncert_mod <- read_csv("single_cals_curve_uncert_mod.csv") %>%
mutate(sigma_curve_uncert = sqrt((measurement_error^2) + (curve_uncert^2)))
##Nesting
single_cals_curve_uncert_nest <- single_cals_curve_uncert_mod %>%
mutate(is_pos = if_else(offset_magnitude >= 0, TRUE, FALSE)) %>%
select(curve_uncert, measurement_error, offset_magnitude, accuracy_68,
accuracy_95, is_pos, sigma_curve_uncert) %>%
group_by(is_pos) %>%
nest()
### Now lets run the models...
single_cals_curve_uncert_regr <- single_cals_curve_uncert_nest %>%
mutate(
offset_curve_acc68 = map(data, offset_curve_acc68),
offset_curve_acc95 = map(data, offset_curve_acc95),
offset_curve_interact_acc68 = map(data, offset_curve_interact_acc68),
offset_curve_interact_acc95 = map(data, offset_curve_interact_acc95),
offset_sigma_curve_acc68 = map(data, offset_sigma_curve_acc68),
offset_sigma_curve_acc95 = map(data, offset_sigma_curve_acc95),
offset_sigma_curve_interact_oc_acc68 =
map(data, offset_sigma_curve_interact_oc_acc68),
offset_sigma_curve_interact_oc_acc95 =
map(data, offset_sigma_curve_interact_oc_acc95),
offset_sigma_curve_interact_oc_sc_acc68 =
map(data, offset_sigma_curve_interact_oc_sc_acc68),
offset_sigma_curve_interact_oc_sc_acc95 =
map(data, offset_sigma_curve_interact_oc_sc_acc95),
offset_sigma_curve_interact_oc_sc_ocs_acc68 =
map(data, offset_sigma_curve_interact_oc_sc_ocs_acc68),
offset_sigma_curve_interact_oc_sc_ocs_acc95 =
map(data, offset_sigma_curve_interact_oc_sc_ocs_acc95),
offset_sigma_curve_interact_os_acc68 =
map(data, offset_sigma_curve_interact_os_acc68),
offset_sigma_curve_interact_os_acc95 =
map(data, offset_sigma_curve_interact_os_acc95),
offset_sigma_curve_interact_os_cs_acc68 =
map(data, offset_sigma_curve_interact_os_cs_acc68),
offset_sigma_curve_interact_os_cs_acc95 =
map(data, offset_sigma_curve_interact_os_cs_acc95),
offset_sigma_curve_comb_acc68 =
map(data, offset_sigma_curve_comb_acc68),
offset_sigma_curve_comb_acc95 =
map(data, offset_sigma_curve_comb_acc95),
offset_sigma_curve_comb_interact_acc68 =
map(data, offset_sigma_curve_comb_interact_acc68),
offset_sigma_curve_comb_interact_acc95 =
map(data, offset_sigma_curve_comb_interact_acc95)
)
### Lets re-orgnize the table to make parameter extraction easier.
single_cals_curve_uncert_regr <- single_cals_curve_uncert_regr %>%
select(-data) %>%
pivot_longer(!is_pos, names_to = "model", values_to = "model_results")
saveRDS(single_cals_curve_uncert_regr, "single_cals_curve_uncert_regr.rds")
single_cals_curve_uncert_regr <- readRDS("single_cals_curve_uncert_regr.rds")
### Extract the diagnostics
single_cals_curve_uncert_diag <- single_cals_curve_uncert_regr %>%
mutate(model_diags = map(model_results, glance)) %>%
select(-model_results) %>%
unnest(cols = c(model_diags))
### Now the visualization
single_cals_curve_uncert_diag %>%
mutate(
offset_direction = if_else(is_pos, "Positive", "Negative"),
hpd_area = if_else(str_detect(model, "68"), "68.2% HPD Area", "95.4% HPD Area"),
model = str_remove_all(model, "_acc\\d{2}")
) %>%
ggplot(aes(x = model, y = AIC)) +
geom_bar(stat = "identity", fill = "steelblue", color = "grey40") +
facet_grid(rows = vars(hpd_area), cols = vars(offset_direction), scales = "free") +
labs(
x = "Model",
subtitle = "AIC of different models that include curve uncertainty"
) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
#legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
)
##Get the results out
offset_curve_sigma_comb_params <- readRDS("single_cals_curve_uncert_regr.rds") %>%
filter(str_detect(model, "comb")) %>%
mutate(model_results = map(model_results, tidy)) %>%
unnest(cols = c(model_results))
offset_curve_sigma_comb_params %>%
mutate(
is_pos = if_else(is_pos, "pos_offset", "neg_offset"),
hpd_area = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = is_pos, y = estimate)) +
geom_hline(yintercept = 0, color = "grey80") +
geom_point(stat = "identity") +
geom_linerange(aes(ymin = estimate - 2*std.error, ymax = estimate + 2*std.error)) +
facet_grid(rows = vars(term), cols = vars(hpd_area), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
#legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
subtitle = "68.2% HPD"
)
##Get the results out
offset_curve_sigma_comb_params <- readRDS("single_cals_curve_uncert_regr.rds") %>%
filter(str_detect(model, "comb_acc")) %>%
mutate(model_results = map(model_results, tidy)) %>%
unnest(cols = c(model_results))
offset_curve_sigma_comb_params %>%
mutate(
is_pos = if_else(is_pos, "pos_offset", "neg_offset"),
hpd_area = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = is_pos, y = estimate)) +
geom_hline(yintercept = 0, color = "grey80") +
geom_point(stat = "identity") +
geom_linerange(aes(ymin = estimate - 2*std.error, ymax = estimate + 2*std.error)) +
facet_grid(rows = vars(term), cols = vars(hpd_area), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
#legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
subtitle = "68.2% HPD"
)
##Get the results out
offset_curve_sigma_comb__interact_params <- readRDS("single_cals_curve_uncert_regr.rds") %>%
filter(str_detect(model, "comb_inter")) %>%
mutate(model_results = map(model_results, tidy)) %>%
unnest(cols = c(model_results))
## Visualize version with interaction
offset_curve_sigma_comb_interact_params %>%
mutate(
is_pos = if_else(is_pos, "pos_offset", "neg_offset"),
hpd_area = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = is_pos, y = estimate)) +
geom_hline(yintercept = 0, color = "grey80") +
geom_point(stat = "identity") +
geom_linerange(aes(ymin = estimate - 2*std.error, ymax = estimate + 2*std.error)) +
facet_grid(rows = vars(term), cols = vars(hpd_area), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
#legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
subtitle = "68.2% HPD"
)
##Get the results out
offset_curve_sigma_comb_interact_params <- readRDS("single_cals_curve_uncert_regr.rds") %>%
filter(str_detect(model, "comb_inter")) %>%
mutate(model_results = map(model_results, tidy)) %>%
unnest(cols = c(model_results))
## Visualize version with interaction
offset_curve_sigma_comb_interact_params %>%
mutate(
is_pos = if_else(is_pos, "pos_offset", "neg_offset"),
hpd_area = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = is_pos, y = estimate)) +
geom_hline(yintercept = 0, color = "grey80") +
geom_point(stat = "identity") +
geom_linerange(aes(ymin = estimate - 2*std.error, ymax = estimate + 2*std.error)) +
facet_grid(rows = vars(term), cols = vars(hpd_area), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
#legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
subtitle = "68.2% HPD"
)
## Visualize version without interaction
offset_curve_sigma_comb_params %>%
mutate(
is_pos = if_else(is_pos, "pos_offset", "neg_offset"),
hpd_area = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = is_pos, y = estimate)) +
geom_hline(yintercept = 0, color = "grey80") +
geom_point(stat = "identity") +
geom_linerange(aes(ymin = estimate - 2*std.error, ymax = estimate + 2*std.error)) +
facet_grid(rows = vars(term), cols = vars(hpd_area), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
#legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
subtitle = "68.2% HPD"
)
offset_curve_sigma_comb_params
offset_curve_sigma_comb_params %>%
filter(str_detect(term, "Interce"))
offset_curve_sigma_comb_params %>%
filter(str_detect(term, "Interce")) %>%
select(is_pos, model, estimate) %>%
mutate(acc_zero = 1 / (1 + exp(term)))
offset_curve_sigma_comb_params %>%
filter(str_detect(term, "Interce")) %>%
select(is_pos, model, estimate) %>%
mutate(acc_zero = 1 / (1 + exp(estimate)))
offset_curve_sigma_comb_params %>%
filter(str_detect(term, "Interce")) %>%
select(is_pos, model, estimate) %>%
mutate(acc_zero = 1 / (1 + exp(- estimate)))
offset_curve_sigma_comb_interact_params %>%
filter(str_detect(term, "Interce")) %>%
select(is_pos, model, estimate) %>%
mutate(acc_zero = 1 / (1 + exp(- estimate)))
offset_curve_sigma_comb_params %>%
filter(str_detect(term, "Interce"))

mutate(
logistic_results = map(glm_list, tidy),
model = model
) %>%
select(-glm_list) %>%
unnest(logistic_results)
}
View(temp_results)
for (model in model_names[4]) {
## This will get a little experimental - we are trying to create a big old table!
## First, we thin down the DF to the model of interest
temp_results <- single_cals_modelled %>%
select(1, 2, model) %>%
rename(glm_list = 3) %>%
mutate(
logistic_results = map(glm_list, tidy),
model = model
) %>%
select(-glm_list) %>%
unnest(logistic_results)
temp_diagnostics <- single_cals_modelled %>%
select(1, 2, model) %>%
rename(glm_list = 3) %>%
mutate(
logistic_diagnostics = map(glm_list, glance),
model = model
) %>%
select(-glm_list) %>%
unnest(logistic_diagnostics)
}
View(temp_diagnostics)
model_names <- colnames(single_cals_modelled)[4:11]
single_cals_log_results <- data.frame()
single_cals_log_diagnostics <- data.frame()
for (model in model_names) {
## This will get a little experimental - we are trying to create a big old table!
## First, we thin down the DF to the model of interest
temp_results <- single_cals_modelled %>%
select(1, 2, model) %>%
rename(glm_list = 3) %>%
mutate(
logistic_results = map(glm_list, tidy),
model = model
) %>%
select(-glm_list) %>%
unnest(logistic_results)
temp_diagnostics <- single_cals_modelled %>%
select(1, 2, model) %>%
rename(glm_list = 3) %>%
mutate(
logistic_diagnostics = map(glm_list, glance),
model = model
) %>%
select(-glm_list) %>%
unnest(logistic_diagnostics)
single_cals_log_results <- rbind(single_cals_log_results, temp_results)
single_cals_log_diagnostics <- rbind(single_cals_log_diagnostics, temp_diagnostics)
}
write_csv(single_cals_log_results, "model_results/single_cals_log_results.csv")
write_csv(single_cals_log_diagnostics, "model_results/single_cals_log_diagnostics.csv")
library(tidyverse)
library(broom)
single_cals_log_diagnostics <- read_csv("model_results/single_cals_log_diagnostics.csv")
View(single_cals_log_diagnostics)
## Lets make some plots
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = binned_targets, y = null.deviance)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos)
## Lets make some plots
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = binned_targets, y = AIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos)
## Lets make some plots
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = binned_targets, y = AIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
thme_bw()
## Lets make some plots
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = binned_targets, y = AIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
## Lets make some plots
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = binned_targets, y = AIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = binned_targets, y = BIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
## Lets make some plots
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = binned_targets, y = AIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = binned_targets, y = BIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = binned_targets, y = null.deviance)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
## Lets make some plots
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = binned_targets, y = AIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = binned_targets, y = BIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
## Lets make some plots
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = binned_targets, y = AIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = binned_targets, y = BIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
single_cals_log_diagnostics %>%
filter(str_detect(model, "95")) %>%
ggplot(aes(x = binned_targets, y = AIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
single_cals_log_diagnostics %>%
filter(str_detect(model, "95")) %>%
ggplot(aes(x = binned_targets, y = BIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
single_cals <- read_csv("simulation_results/singles_011_results.csv")
min(single_cals$target_year, max(single_cals$target_year))
min(single_cals$target_year); max(single_cals$target_year)
###Seperate pos from neg offsets and group things by cal curve
single_cals_modelled <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets = ntile(target_year, 50)
) %>%
order(target_year)
single_cals_modelled <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets = ntile(target_year, 50)
)
View(single_cals_modelled)
###Seperate pos from neg offsets and group things by cal curve
single_cals_modelled <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets = ntile(target_year, 50)
) %>%
order_by(target_year)
###Seperate pos from neg offsets and group things by cal curve
single_cals_modelled <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets = ntile(target_year, 50)
) %>%
arrange(target_year)
View(single_cals_modelled)
bin_min_year <- single_cals_modelled %>%
group_by(binned_targets) %>%
summarize(bin_start = min(target_year)) %>%
pull(bin_start)
single_cals_modelled <- single_cals_modelled %>%
group_by(offset_pos, binned_targets) %>%
nest()
single_cals_modelled %>%
group_by(binned_targets) %>%
summarize(bin_start = min(target_year)) %>%
pull(bin_start)
###Seperate pos from neg offsets and group things by cal curve
single_cals_modelled <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets = ntile(target_year, 50)
) %>%
arrange(target_year)
single_cals_modelled %>%
group_by(binned_targets) %>%
summarize(bin_start = min(target_year)) %>%
pull(bin_start)
single_cals_modelled %>%
group_by(binned_targets) %>%
summarize(bin_start = min(target_year))
single_cals_modelled <- single_cals_modelled %>%
group_by(offset_pos, binned_targets) %>%
nest() %>%
arrange(offset_pos)
###Seperate pos from neg offsets and group things by cal curve
single_cals_modelled <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets = ntile(target_year, 50)
) %>%
arrange(target_year)
bin_min_year <- single_cals_modelled %>%
group_by(binned_targets) %>%
summarize(bin_start = min(target_year)) %>%
pull(bin_start)
single_cals_modelled <- single_cals_modelled %>%
group_by(offset_pos, binned_targets) %>%
nest() %>%
arrange(offset_pos) %>%
rbind(bin_min_year)
###Seperate pos from neg offsets and group things by cal curve
single_cals_modelled <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets = ntile(target_year, 50)
) %>%
arrange(target_year)
bin_min_year <- single_cals_modelled %>%
group_by(binned_targets) %>%
summarize(bin_start = min(target_year))
single_cals_modelled <- single_cals_modelled %>%
group_by(offset_pos, binned_targets) %>%
nest() %>%
arrange(offset_pos) %>%
inner_join(bin_min_year)
### Load the data
single_cals <- read_csv("simulation_results/singles_011_results.csv")
###Seperate pos from neg offsets and group things by cal curve
single_cals_modelled <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets = ntile(target_year, 50)
) %>%
arrange(target_year)
bin_min_year <- single_cals_modelled %>%
group_by(binned_targets) %>%
summarize(bin_start = min(target_year))
#This will give the bins "real" time meaning
single_cals_modelled <- single_cals_modelled %>%
group_by(offset_pos, binned_targets) %>%
nest() %>%
arrange(offset_pos) %>%
inner_join(bin_min_year) %>%
select(bin_min_year, offset_pos, data)
single_cals <- read_csv("simulation_results/singles_011_results.csv")
###Seperate pos from neg offsets and group things by cal curve
single_cals_modelled <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets = ntile(target_year, 50)
) %>%
arrange(target_year)
bin_min_year <- single_cals_modelled %>%
group_by(binned_targets) %>%
summarize(bin_start = min(target_year))
single_cals_modelled <- single_cals_modelled %>%
group_by(offset_pos, binned_targets) %>%
nest() %>%
arrange(offset_pos) %>%
inner_join(bin_min_year) %>%
select(bin_min_year, offset_pos, data)
###Seperate pos from neg offsets and group things by cal curve
single_cals_modelled <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets = ntile(target_year, 50)
) %>%
arrange(target_year)
bin_min_year <- single_cals_modelled %>%
group_by(binned_targets) %>%
summarize(bin_start = min(target_year))
single_cals_modelled <- single_cals_modelled %>%
group_by(offset_pos, binned_targets) %>%
nest() %>%
arrange(offset_pos) %>%
inner_join(bin_min_year)
single_cals_modelled <- single_cals_modelled %>%
select(4, 1, 3)
### Build functions to use with map
## Could have tried in-line but it would be very confusing with the number of parameters floating about.
offset_only_acc68 <- function(singles_data) {
glm(accuracy_68 ~ offset_magnitude, data = singles_data,
family = binomial)
}
sigma_only_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error, data = singles_data,
family = binomial(link = 'logit'))
}
offset_sigma_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error + offset_magnitude, data = singles_data,
family = binomial(link = 'logit'))
}
offset_sigma_interact_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error + offset_magnitude +
measurement_error * offset_magnitude,
data = singles_data, family = binomial(link = 'logit'))
}
offset_only_acc95 <- function(singles_data) {
glm(accuracy_95 ~ offset_magnitude, data = singles_data,
family = binomial(link = 'logit'))
}
sigma_only_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error, data = singles_data,
family = binomial(link = 'logit'))
}
offset_sigma_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error + offset_magnitude, data = singles_data,
family = binomial(link = 'logit'))
}
offset_sigma_interact_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error + offset_magnitude +
measurement_error * offset_magnitude,
data = singles_data, family = binomial(link = 'logit'))
}
### Now use map to apply the models across the data
single_cals_modelled <- single_cals_modelled %>%
mutate(
offset_only_acc68 = map(data, offset_only_acc68),
sigma_only_acc68 = map(data, sigma_only_acc68),
offset_sigma_acc68 = map(data, offset_sigma_acc68),
offset_sigma_interact_acc68 = map(data, offset_sigma_interact_acc68),
offset_only_acc95 = map(data, offset_only_acc95),
sigma_only_acc95 = map(data, sigma_only_acc95),
offset_sigma_acc95 = map(data, offset_sigma_acc95),
offset_sigma_interact_acc95 = map(data, offset_sigma_interact_acc95)
)
model_names <- colnames(single_cals_modelled)[4:11]
single_cals_log_results <- data.frame()
single_cals_log_diagnostics <- data.frame()
for (model in model_names) {
## This will get a little experimental - we are trying to create a big old table!
## First, we thin down the DF to the model of interest
temp_results <- single_cals_modelled %>%
select(1, 2, model) %>%
rename(glm_list = 3) %>% #This rename allows map to work correctly
mutate(
logistic_results = map(glm_list, tidy),
model = model
) %>%
select(-glm_list) %>%
unnest(logistic_results)
temp_diagnostics <- single_cals_modelled %>%
select(1, 2, model) %>%
rename(glm_list = 3) %>%
mutate(
logistic_diagnostics = map(glm_list, glance),
model = model
) %>%
select(-glm_list) %>%
unnest(logistic_diagnostics)
single_cals_log_results <- rbind(single_cals_log_results, temp_results)
single_cals_log_diagnostics <- rbind(single_cals_log_diagnostics,
temp_diagnostics)
}
model_names <- colnames(single_cals_modelled)[4:11]
model_names <- colnames(single_cals_modelled)[5:12]
single_cals_log_results <- data.frame()
single_cals_log_diagnostics <- data.frame()
for (model in model_names) {
## This will get a little experimental - we are trying to create a big old table!
## First, we thin down the DF to the model of interest
temp_results <- single_cals_modelled %>%
select(1, 2, model) %>%
rename(glm_list = 3) %>% #This rename allows map to work correctly
mutate(
logistic_results = map(glm_list, tidy),
model = model
) %>%
select(-glm_list) %>%
unnest(logistic_results)
temp_diagnostics <- single_cals_modelled %>%
select(1, 2, model) %>%
rename(glm_list = 3) %>%
mutate(
logistic_diagnostics = map(glm_list, glance),
model = model
) %>%
select(-glm_list) %>%
unnest(logistic_diagnostics)
single_cals_log_results <- rbind(single_cals_log_results, temp_results)
single_cals_log_diagnostics <- rbind(single_cals_log_diagnostics,
temp_diagnostics)
}
model_names <- colnames(single_cals_modelled)[5:12]
single_cals_log_results <- data.frame()
single_cals_log_diagnostics <- data.frame()
for (model in model_names) {
## This will get a little experimental - we are trying to create a big old table!
## First, we thin down the DF to the model of interest
temp_results <- single_cals_modelled %>%
select(2, 3, model) %>%
rename(glm_list = 3) %>% #This rename allows map to work correctly
mutate(
logistic_results = map(glm_list, tidy),
model = model
) %>%
select(-glm_list) %>%
unnest(logistic_results)
temp_diagnostics <- single_cals_modelled %>%
select(2, 3, model) %>%
rename(glm_list = 3) %>%
mutate(
logistic_diagnostics = map(glm_list, glance),
model = model
) %>%
select(-glm_list) %>%
unnest(logistic_diagnostics)
single_cals_log_results <- rbind(single_cals_log_results, temp_results)
single_cals_log_diagnostics <- rbind(single_cals_log_diagnostics,
temp_diagnostics)
}
single_cals_log_diagnostics <- inner_join(single_cals_log_diagnostics, bin_min_year)
single_cals_log_diagnostics <- read_csv("model_results/single_cals_log_diagnostics.csv")
single_cals_log_diagnostics <- inner_join(single_cals_log_diagnostics, bin_min_year)
write_csv(single_cals_log_diagnostics,
"model_results/single_cals_log_diagnostics.csv")
## Lets make some plots
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = bin_start, y = AIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
single_cals_log_diagnostics %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = bin_start, y = BIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
single_cals_log_diagnostics %>%
filter(str_detect(model, "95")) %>%
ggplot(aes(x = bin_start, y = AIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
single_cals_log_diagnostics %>%
filter(str_detect(model, "95")) %>%
ggplot(aes(x = bin_start, y = BIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw()
cal_curve_binned <- read_csv("intcal_20_interpolated.csv")
cal_curve_binned <- read_csv("intcal_20_interpolated.csv") %>%
mutate(binned_targets = ntile(CalBP, 50))
cal_curve_binned <- read_csv("intcal_20_interpolated.csv") %>%
mutate(binned_targets = ntile(CalBP, 50)) %>%
group_by(binned_targets) %>%
summarize(bp_sd = sd(BP))
View(cal_curve_binned)
View(bin_min_year)
inner_join(single_cals_log_diagnostics, cal_curve_binned)
inner_join(single_cals_log_diagnostics, cal_curve_binned) %>%
ggplot(aes(x = bp_sd, y = AIC)) +
geom_point()
inner_join(single_cals_log_diagnostics, cal_curve_binned) %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = bp_sd, y = AIC)) +
geom_point() +
facet_wrap(~offset_pos)
inner_join(single_cals_log_diagnostics, cal_curve_binned) %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = bp_sd, y = AIC)) +
geom_point(aes(colour = model)) +
facet_wrap(~offset_pos)
inner_join(single_cals_log_diagnostics, cal_curve_binned) %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = bp_sd, y = AIC)) +
geom_point(aes(colour = model)) +
facet_wrap(~model)
single_cals_log_results <- read_csv("model_results/single_cals_log_results.csv") %>%
inner_join(bin_min_year)
single_cals_log_results %>%
filter(str_detect(model, "interact")) %>%
ggplot(aes(x = bin_start, y = estimate)) +
geom_line(aes(color = term)) +
facet_wrap(~model)
single_cals_log_results %>%
filter(str_detect(model, "interact") & !str_detect(term, "Intercept")) %>%
ggplot(aes(x = bin_start, y = estimate)) +
geom_line(aes(color = term)) +
facet_wrap(~model)
single_cals_log_results %>%
filter(str_detect(model, "interact") & !str_detect(term, "Intercept")) %>%
ggplot(aes(x = bin_start, y = estimate)) +
geom_line(aes(color = term)) +
facet_grid(rows = vars(offset_pos), cols = vars(model))

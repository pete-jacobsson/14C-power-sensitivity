shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#Prep sims: filter fit slider choice and round where applicable
sim_results_filtered <- singles_011_results %>%
filter(
target_year >= input$target_year_011[1] &
target_year <= input$target_year_011[2],
offset_magnitude >= input$offset_magnitude_011[1] &
offset_magnitude <= input$offset_magnitude_011[2],
measurement_error >= input$measurement_error_011[1] &
measurement_error <= input$measurement_error_011[2]
) %>%
mutate(
target_year  = round(target_year, digits = -2),
measurement_error = round(measurement_error),
offset_magnitude  = round(offset_magnitude)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
singles_011_results %>%
group_by("target_year") %>%
summarize(
check = sum(accuracy_68)
) %>%
head()
singles_011_results %>%
mutate(target_year = round(target_year, -3))
singles_011_results %>%
mutate(target_year = round(target_year, -3)) %>%
group_by("target_year") %>%
summarize(
check = sum(accuracy_68)
) %>%
head()
singles_011_results %>%
mutate(target_year = round(target_year, -3)) %>%
group_by(target_year) %>%
summarize(
check = sum(accuracy_68)
) %>%
head()
singles_011_results %>%
mutate(target_year = round(measurement_error)) %>%
group_by(target_year) %>%
summarize(
check = sum(accuracy_68)
) %>%
head()
singles_011_results %>%
mutate(target_year = round(measurement_error)) %>%
group_by(singles_results[,1]) %>%
summarize(
check = sum(accuracy_68)
) %>%
head()
singles_011_results %>%
mutate(target_year = round(measurement_error)) %>%
group_by(colnames(singles_011_results)[1]) %>%
summarize(
check = sum(accuracy_68)
) %>%
head()
singles_011_results %>%
mutate(target_year = round(measurement_error)) %>%
group_by(1) %>%
summarize(
check = sum(accuracy_68)
) %>%
head()
target_year[,1]
singles_011_results[,1]
singles_011_results <- read_csv("www/singles_011_results.csv")
library(shiny)
library(tidyverse)
singles_011_results <- read_csv("www/singles_011_results.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
names(singles_011_results[,c(1, 3, 4)])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#Group on the desired parameter
case_when(
input$x_axis_011 == "measurement_error"~ grouping <- "measurement_error",
input$x_axis_011 == "offset_magnitude"~ grouping <- "offset_magnitude",
input$x_axis_011 == "target_year"~ grouping <- "target_year"
)
x_axis_011 <- "measurement_error"
#Group on the desired parameter
case_when(
x_axis_011 == "measurement_error"~ grouping <- "measurement_error",
x_axis_011 == "offset_magnitude"~ grouping <- "offset_magnitude",
x_axis_011 == "target_year"~ grouping <- "target_year"
)
case_when(
x_axis_011 == "measurement_error"~ "measurement_error",
x_axis_011 == "offset_magnitude"~ "offset_magnitude",
x_axis_011 == "target_year"~ "target_year"
)
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(shiny)
library(tidyverse)
singles_011_results <- read_csv("www/singles_011_results.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
singles_011_results$V1
runApp()
test <- "target_year"
test <- "target_year"
case_when(
test == "target_year" ~ "Target Year",
test == "potato" ~ "Potatofish"
)
test <- "potato"
case_when(
test == "target_year" ~ "Target Year",
test == "potato" ~ "Potatofish"
)
runApp()
runApp()
runApp()
runApp()
runApp()

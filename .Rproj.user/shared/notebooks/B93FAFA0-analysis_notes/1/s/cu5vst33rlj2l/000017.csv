"0","## Lets build a function to extract it from our list"
"0",""
"0","predict_singles_accuracy <- function (offset_dir, hpd_area, offset_magnitude,"
"0","                                      sigma, curve_uncert){"
"0","  ## Forgive the if statements - this problem does not require high-power processing after all!"
"0","  "
"0","  if (!exists(""stan_offset_curve_sigma_comb"")) {"
"0","    warning(""Load MCMC results please!"") ## Every now and again, I build defensive habits :P"
"0","  }"
"0","  "
"0","  if (offset_dir == ""pos"" & hpd_area == ""68"") {"
"0","    model <- as.array(stan_offset_curve_sigma_comb[[1]])"
"0","  }"
"0","  if (offset_dir == ""neg"" & hpd_area == ""68"") {"
"0","    model <- as.array(stan_offset_curve_sigma_comb[[2]])"
"0","  }"
"0","    if (offset_dir == ""pos"" & hpd_area == ""95"") {"
"0","    model <- as.array(stan_offset_curve_sigma_comb[[3]])"
"0","  }"
"0","  if (offset_dir == ""neg"" & hpd_area == ""95"") {"
"0","    model <- as.array(stan_offset_curve_sigma_comb[[4]])"
"0","  }"
"0","  "
"0","  ## Get the chain results out"
"0","  intercepts <- model[1:1000, 1, 1]"
"0","  offset_effects <- model[1:1000, 1, 2]"
"0","  uncert_effects <- model[1:1000, 1, 3]"
"0","  "
"0","  ##Do the maths"
"0","  sigma_curve_uncert <- sqrt((sigma ^ 2) + (curve_uncert ^ 2))"
"0","  "
"0","  exp_term <- intercepts + "
"0","    offset_magnitude * offset_effects + "
"0","    sigma_curve_uncert * uncert_effects"
"0","  "
"0","  pred_results <- 1 / (1 + exp(-exp_term))"
"0","  "
"0","  pred_results"
"0","}"
"0",""
"0",""
"0",""

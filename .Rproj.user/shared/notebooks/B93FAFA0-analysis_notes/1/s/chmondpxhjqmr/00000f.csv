"0","plot_model_predictions_ocs <- function(offset_dir, hpd_area, variable, "
"0","                                       range, rounding, xlab) {"
"0","  ## This function wraps predict_model_results and plot_simulation_results and plots prediction over simulation."
"0","  ## parameters and assumptions as per underpinning functions."
"0","  plot <- plot_simulation_results_osc(range_to_plot = range, hpd_area = hpd_area,"
"0","                                      variable = variable, rounding = rounding,"
"0","                                      xlab = xlab)"
"0","  "
"0","  hpd_for_predict = str_extract(hpd_area, ""\\d{2}"") ## predict_model_results only takes two-digit numbers as input here (for filtering) - this extracts from HPD area above"
"0","  "
"0","  predicts_tab <- predict_model_results_osc(offset_dir = offset_dir,"
"0","                                            hpd_area = hpd_for_predict, "
"0","                                            variable = variable, "
"0","                                            variable_range = seq(range[1],"
"0","                                                                 range[2]))"
"0","  predicts_tab <- predicts_tab %>%"
"0","    rename(""variable_to_plot"" = variable, ratio_accurate = 1) ##Dovetail the variable names for the plot at the iteration where interactions start getting explored"
"0","  "
"0","  plot <- plot +"
"0","    geom_line(data = predicts_tab)"
"0","  "
"0","  plot"
"0","}"

"0","### Load the data"
"0",""
"0","single_cals <- read_csv(""simulation_results/singles_011_results.csv"")"
"2","[1mRows: [22m[34m10000[39m [1mColumns: [22m[34m10[39m"
"2","[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m "",""
[32mdbl[39m (10): target_year, offset_14c_age, measurement_error, offset_magnitude, accuracy_68, accuracy_95, precision_68, precision_95..."
"2","
[36mâ„¹[39m Use `spec()` to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set `show_col_types = FALSE` to quiet this message."
"0","###Seperate pos from neg offsets and group things by cal curve "
"0","single_cals_modelled <- single_cals %>%"
"0","  mutate ("
"0","    offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),"
"0","    binned_targets = ntile(target_year, 50)"
"0","  ) %>%"
"0","  group_by(offset_pos, binned_targets) %>%"
"0","  nest()"
"0",""
"0",""
"0","### Now lets specify a model to test if things work"
"0","offset_only_acc68 <- function(singles_data) {"
"0","  glm(accuracy_68 ~ offset_magnitude, data = singles_data, family = binomial(link = 'logit'))"
"0","}"
"0",""
"0","### After which we apply the model across the DF and check if everythign works as it should."
"0",""
"0",""
"0","# single_cals_modelled <- single_cals_modelled %>%"
"0","#   mutate(offset_only_acc68 = map(data, offset_only_acc68))"
"0","# "
"0","# summary(single_cals_modelled$offset_only_acc68[[1]])"
"0","##Comment out after testing to avoid clashes"
"0",""
"0","## Great! Now build remaining models and apply to the DF. "
"0",""

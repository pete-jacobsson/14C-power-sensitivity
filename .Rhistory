text = element_text(family = "Corbel")
) +
scale_fill_manual(name = "Model", values = c("steelblue", "darkblue")) +
scale_color_discrete(name = "Model")
single_cals_log_results_bin10 %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_hline(yintercept = 0) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = model), alpha = 0.2, color = "grey75") +
geom_line(aes(color = model), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_fill_manual(name = "Model", values = c("steelblue", "darkblue")) +
scale_color_discrete(name = "Model", values = c("steelblue", "darkblue"))
single_cals_log_results_bin10 %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_hline(yintercept = 0) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = model), alpha = 0.2, color = "grey75") +
geom_line(aes(color = model), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_fill_manual(name = "Model", values = c("steelblue", "darkblue")) +
scale_color_manual(values = c("steelblue", "darkblue"))
single_cals_log_results_bin10 %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_hline(yintercept = 0) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = model), alpha = 0.2, color = "grey75") +
geom_line(aes(color = model), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_fill_manual(values = c("steelblue", "darkblue")) +
scale_color_manual(values = c("steelblue", "darkblue"))
single_cals_log_results_bin10 %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_hline(yintercept = 0) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = model), alpha = 0.2, color = "grey75") +
geom_line(aes(color = model), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey70", size = 0.5),
panel.border = element_blank(),
axis.line = element_line(colour = "grey40")
strip.background = element_rect(
single_cals_log_results_bin10 %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_hline(yintercept = 0) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = model), alpha = 0.2, color = "grey75") +
geom_line(aes(color = model), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey70", size = 0.5),
panel.border = element_blank(),
axis.line = element_line(colour = "grey40"),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_fill_manual(values = c("steelblue", "darkblue")) +
scale_color_manual(values = c("steelblue", "darkblue"))
single_cals_log_results_bin10 %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_hline(yintercept = 0) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = model), alpha = 0.2, color = "grey75") +
geom_line(aes(color = model), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey90", size = 0.1),
panel.border = element_blank(),
axis.line = element_line(colour = "grey40"),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_fill_manual(values = c("steelblue", "darkblue")) +
scale_color_manual(values = c("steelblue", "darkblue"))
single_cals_log_results_bin10 %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_hline(yintercept = 0) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = model), alpha = 0.2, color = "grey75") +
geom_line(aes(color = model), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey90", size = 0.1),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_fill_manual(values = c("steelblue", "darkblue")) +
scale_color_manual(values = c("steelblue", "darkblue"))
single_cals_log_results_bin10 %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = model), alpha = 0.2, color = "grey75") +
geom_line(aes(color = model), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey90", size = 0.1),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_fill_manual(values = c("steelblue", "darkblue")) +
scale_color_manual(values = c("steelblue", "darkblue"))
single_cals_log_results_bin10 %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = model), alpha = 0.2, color = "grey75") +
geom_line(aes(color = model), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey80", size = 0.1),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_fill_manual(values = c("steelblue", "darkblue")) +
scale_color_manual(values = c("steelblue", "darkblue"))
single_cals_log_results_bin10 %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = model), alpha = 0.2, color = "grey75") +
geom_line(aes(color = model), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey80", size = 0.1),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_fill_manual(values = c("steelblue", "darkblue")) +
scale_color_manual(values = c("steelblue", "darkblue"))
single_cals_log_results_bin10 %>%
filter(str_detect(model, "interact") & !str_detect(term, "Intercept")) %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = term), alpha = 0.2, color = "grey75") +
geom_line(aes(color = term), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model)) +
ylim(c(-2, 2)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey80", size = 0.1),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_fill_manual(name = "Parameter", values = c("steelblue", "grey50", "darkblue")) +
scale_color_discrete(name = "Parameter")
single_cals_log_results_bin10 %>%
filter(str_detect(model, "interact") & !str_detect(term, "Intercept")) %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = term), alpha = 0.2, color = "grey75") +
geom_line(aes(color = term), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model)) +
ylim(c(-0.25, 0.25)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey80", size = 0.1),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_fill_manual(name = "Parameter", values = c("steelblue", "grey50", "darkblue")) +
scale_color_discrete(name = "Parameter")
single_cals_log_results_bin10 %>%
filter(str_detect(model, "interact") & !str_detect(term, "Intercept")) %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = term), alpha = 0.2, color = "grey75") +
geom_line(aes(color = term), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model)) +
#ylim(c(-0.25, 0.25)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey80", size = 0.1),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_fill_manual(name = "Parameter", values = c("steelblue", "grey50", "darkblue")) +
scale_color_discrete(name = "Parameter")
single_cals_log_results_bin10 %>%
filter(str_detect(model, "interact") & !str_detect(term, "Intercept")) %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = term), alpha = 0.2, color = "grey75") +
geom_line(aes(color = term), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model)) +
#ylim(c(-0.25, 0.25)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey80", size = 0.1),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
#legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_fill_manual(name = "Parameter", values = c("steelblue", "grey50", "darkblue")) +
scale_color_discrete(name = "Parameter")
library(tidyverse)
library(broom)
### Load the data
single_cals <- read_csv("simulation_results/singles_011_results.csv")
single_cals_w_curve_uncert <- read_csv("intcal_20_interpolated.csv")
single_cals_w_curve_uncert <- read_csv("intcal_20_interpolated.csv") %>%
select(CalBP, Error) %>%
rename(target_year = CalBP, curve_uncert = Error)
single_cals_w_curve_uncert <- read_csv("intcal_20_interpolated.csv") %>%
select(CalBP, Error) %>%
rename(target_year = CalBP, curve_uncert = Error) %>%
inner_join(single_cals)
single_cals_w_curve_uncert %>%
group_by(curve_uncert) %>%
summarize(
`68.2% HPD` = mean(accuracy_68),
`95.4% HPD` = mean(accuracy_95)
) %>%
pivot_longer(!curve_uncert, values_to = "accuracy", names_to = "hpd_area")
single_cals_w_curve_uncert %>%
group_by(curve_uncert) %>%
summarize(
`68.2% HPD` = mean(accuracy_68),
`95.4% HPD` = mean(accuracy_95)
) %>%
pivot_longer(!curve_uncert, values_to = "accuracy", names_to = "hpd_area") %>%
ggplot(aes(x = curve_uncert, y = accuracy)) +
geom_bar(stat = 'identity') +
facet_wrap(~hpd_area)
single_cals_w_curve_uncert %>%
group_by(curve_uncert) %>%
summarize(
`68.2% HPD` = mean(accuracy_68),
`95.4% HPD` = mean(accuracy_95)
)
## Take a quick look at how curve uncertainty goes with accuracy
single_cals_w_curve_uncert %>%
mutate(curve_uncert = round(curve_uncert)) %>%
group_by(curve_uncert) %>%
summarize(
`68.2% HPD` = mean(accuracy_68),
`95.4% HPD` = mean(accuracy_95)
) %>%
pivot_longer(!curve_uncert, values_to = "accuracy", names_to = "hpd_area") %>%
ggplot(aes(x = curve_uncert, y = accuracy)) +
geom_bar(stat = 'identity') +
facet_wrap(~hpd_area)
## Take a quick look at how curve uncertainty goes with accuracy
single_cals_w_curve_uncert %>%
mutate(curve_uncert = round(curve_uncert)) %>%
group_by(curve_uncert) %>%
summarize(
`68.2% HPD` = mean(accuracy_68),
`95.4% HPD` = mean(accuracy_95)
) %>%
pivot_longer(!curve_uncert, values_to = "accuracy", names_to = "hpd_area") %>%
ggplot(aes(x = curve_uncert, y = accuracy)) +
geom_bar(stat = 'identity') +
facet_wrap(~hpd_area)+
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey80", size = 0.1),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
#legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
)
## Take a quick look at how curve uncertainty goes with accuracy
single_cals_w_curve_uncert %>%
mutate(curve_uncert = round(curve_uncert)) %>%
group_by(curve_uncert) %>%
summarize(
`68.2% HPD` = mean(accuracy_68),
`95.4% HPD` = mean(accuracy_95)
) %>%
pivot_longer(!curve_uncert, values_to = "accuracy", names_to = "hpd_area") %>%
ggplot(aes(x = curve_uncert, y = accuracy)) +
geom_bar(stat = 'identity', fill = "steelblue") +
facet_wrap(~hpd_area)+
labs(
x = "Calibration curve uncertainty",
y = "Ratio accurate"
) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_line(colour = "grey80", size = 0.1),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
#legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
)
## Take a quick look at how curve uncertainty goes with accuracy
single_cals_w_curve_uncert %>%
mutate(curve_uncert = round(curve_uncert)) %>%
group_by(curve_uncert) %>%
summarize(
`68.2% HPD` = mean(accuracy_68),
`95.4% HPD` = mean(accuracy_95)
) %>%
pivot_longer(!curve_uncert, values_to = "accuracy", names_to = "hpd_area") %>%
ggplot(aes(x = curve_uncert, y = accuracy)) +
geom_bar(stat = 'identity', fill = "steelblue") +
facet_wrap(~hpd_area)+
labs(
x = "Calibration curve uncertainty",
y = "Ratio accurate"
) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
#legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
)
###Step 1. Extract bits that we want to use for model validation
single_cals_curve_uncert_val <- single_cals_w_curve_uncert %>%
filter((target_year >= 2400 & target_year <= 2700))
###Step 1. Extract bits that we want to use for model validation
single_cals_curve_uncert_val <- single_cals_w_curve_uncert %>%
filter((target_year >= 2400 & target_year <= 2700) |
(target_year >= 6500 & target_year <= 6800) |
(target_year >= 9400 & target_year <= 9500))
View(single_cals_curve_uncert_val)
###Step 1. Extract bits that we want to use for model validation
single_cals_curve_uncert_val <- single_cals_w_curve_uncert %>%
filter((target_year >= 2400 & target_year <= 2700) |
(target_year >= 6500 & target_year <= 6800) |
(target_year >= 9400 & target_year <= 9500))
single_cals_curve_uncert_mod <- single_cals_w_curve_uncert %>%
filter(!((target_year >= 2400 & target_year <= 2700) |
(target_year >= 6500 & target_year <= 6800) |
(target_year >= 9400 & target_year <= 9500)))
###Step 1. Extract bits that we want to use for model validation
single_cals_curve_uncert_val <- single_cals_w_curve_uncert %>%
filter((target_year >= 2400 & target_year <= 2700) |
(target_year >= 6500 & target_year <= 6800) |
(target_year >= 9400 & target_year <= 9500))
single_cals_curve_uncert_mod <- single_cals_w_curve_uncert %>%
filter(!((target_year >= 2400 & target_year <= 2700) |
(target_year >= 6500 & target_year <= 6800) |
(target_year >= 9400 & target_year <= 9500)))
## Now these get put into csv files for use later:
write_csv(single_cals_curve_uncert_val, "single_cals_curve_uncert_val.csv")
write_csv(single_cals_curve_uncert_mod, "single_cals_curve_uncert_mod.csv")

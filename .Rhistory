source("001_simulation_tools.R") #Adjust name to fit in with Github
source("001_simulation_tools.R") #Adjust name to fit in with Github
source("001_simulation_tools.R") #Adjust name to fit in with Github
source("003_parsing_tools.R")
seqs_033_params <- read.csv("seqs_033_params.csv") %>%
mutate(sim_number = SimNumber,
Offset = 0) %>%
select(- X1, SimNumber)
seqs_032_params <- read.csv("seqs_032_params.csv") %>%
mutate(sim_number = SimNumber,
Offset = 0) %>%
select(- X1, SimNumber)
View(seqs_033_params)
View(seqs_032_params)
seqs_033_params <- read.csv("seqs_033_params.csv") %>%
mutate(sim_number = SimNumber,
Offset = 0) %>%
select(- X1, SimNumber)
seqs_033_params <- read.csv("seqs_033_params.csv") %>%
mutate(sim_number = SimNumber,
Offset = 0) %>%
select(- X, SimNumber)
#Combine wmds 025 results to form a single DF
wmds_025_results_100k <- read_csv("wmds_05_results_100k.csv")
#Combine wmds 025 results to form a single DF
wmds_025_results_100k <- read_csv("wmds_025_results_100k.csv")
wmds_025_results_200k <- read_csv("wmds_025_results_200k.csv")
wmds_025_results_300k <- read_csv("wmds_025_results_300k.csv")
wmds_025_results <- bind_rows(wmds_025_results_100k,
wmds_025_results_200k,
wmds_025_results_300k)
write_csv(wmds_025_results, "wmds_025_results.csv")
test_script <- "test"
library(tidyverse)
list_of_sims <- read_csv("sims_list.csv")
list_of_sims <- read_csv("sims_list.csv")
list_of_sims
View(list_of_sims)
shiny::runApp('sensitivity_shiny')
shiny::runApp('sensitivity_shiny')
library(tidyverse)
View(singles_011_results)
single_cals <- read_csv("simulation_results/singles_011_results.csv")
###Seperate pos from neg offsets and group things by cal curve
single_cals_detailed <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets <- ntile(target_year, 500)
)
View(single_cals)
View(single_cals_detailed)
###Seperate pos from neg offsets and group things by cal curve
single_cals_detailed <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets = ntile(target_year, 500)
)
single_cals_detailed %>%
filter(binned_targets == 209)
###Seperate pos from neg offsets and group things by cal curve
single_cals_detailed <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets = ntile(target_year, 500)
) %>%
group_by(offset_pos, binned_targets)
View(single_cals_detailed)
###Seperate pos from neg offsets and group things by cal curve
single_cals_detailed <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets = ntile(target_year, 500)
) %>%
group_by(offset_pos, binned_targets) %>%
nest()
View(single_cals_detailed)
### Now lets specify some models we would like to compare.
offset_only_acc68 <- function(singles_data) {
glm(accuracy_68 ~ offset, data = singles_data)
}
test_model <- offset_only_acc68(single_cals)
### Now lets specify some models we would like to compare.
offset_only_acc68 <- function(singles_data) {
glm(accuracy_68 ~ offset_magnitude, data = singles_data, family = binomial(link = 'logit'))
}
test_model <- offset_only_acc68(single_cals)
summary(test_model)
single_cal_modelled <- single_cals_detailed %>%
mutate(offset_only_acc68 = map(offset_only_acc68, data))
single_cal_modelled <- single_cals_detailed %>%
mutate(offset_only_acc68 = map(data, offset_only_acc68))
dplyr::last_dplyr_warnings()
View(single_cals_detailed)
View(test_model)
View(single_cal_modelled)
View(single_cal_modelled[[4]][[1]])
View(single_cals_detailed)
View(single_cals_detailed[[3]][[1]])
###Seperate pos from neg offsets and group things by cal curve
single_cals_modelled <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
binned_targets = ntile(target_year, 50)
) %>%
group_by(offset_pos, binned_targets) %>%
nest()
### Now lets specify some models we would like to compare.
offset_only_acc68 <- function(singles_data) {
glm(accuracy_68 ~ offset_magnitude, data = singles_data, family = binomial(link = 'logit'))
}
single_cal_modelled <- single_cals_detailed %>%
mutate(offset_only_acc68 = map(data, offset_only_acc68))
single_cal_modelled <- single_cals_modelled %>%
mutate(offset_only_acc68 = map(data, offset_only_acc68))
View(single_cal_modelled)
View(single_cal_modelled[[3]][[1]])
View(single_cal_modelled)
View(single_cal_modelled[[4]][[1]])
summary(single_cal_modelled$offset_only_acc68[1])
summary(single_cal_modelled$offset_only_acc68[[1]])

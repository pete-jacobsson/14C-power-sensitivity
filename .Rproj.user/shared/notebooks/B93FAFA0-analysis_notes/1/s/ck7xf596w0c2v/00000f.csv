"0","set_up_predicts_tab <- function(param_to_predict = ""offset"", offset, sigma, curve_uncert) {"
"0","  ## This function takes on information on what parameter we want to predict on and what values to fix for other parameters"
"0","  ## Returns a table of predicted values"
"0","  ## Assumes correct vparameter names entered (""offset"", ""sigma"", ""curve_uncert""). Assumes input for values comes either as vectors of min/max, or as desired mean values."
"0","  "
"0","  if (param_to_predict == ""offset"") {"
"0","    offset_magnitude = seq(offset[1], offset[2], length.out = 100)"
"0","    measurement_error = rep(mean(sigma), 100)"
"0","    curve_uncert = rep(mean(curve_uncert), 100)"
"0","  } else if (param_to_predict == ""sigma"") {"
"0","    offset_magnitude = rep(mean(offset), 100)"
"0","    measurement_error = seq(sigma[1], sigma[2], length.out = 100)"
"0","    curve_uncert = rep(mean(curve_uncert), 100)"
"0","  } else if (param_to_predict == ""curve_uncert"") {"
"0","    offset_magnitude = rep(mean(offset), 100)"
"0","    measurement_error = rep(mean(sigma), 100)"
"0","    curve_uncert = seq(curve_uncert[1], curve_uncert[2], length.out = 100)"
"0","  } else {"
"0","    return(warning(""incorrect parmaeter name, please check""))"
"0","  }"
"0","  "
"0","  predict_table <- data.frame(offset_magnitude, measurement_error, curve_uncert)"
"0","  predict_table"
"0","  "
"0","}"
